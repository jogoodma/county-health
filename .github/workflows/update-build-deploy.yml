name: "Cron - County Health Update"
on:
  schedule:
    - cron: '17 4 * * 0,3'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4

        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies

      - name: Install python dependencies
        run: pip install -r packages/pipeline/requirements.txt

      - name: Run the update pipeline
        run: make update 

      - name: Archive parquet files
        uses: actions/upload-artifact@v3
        with:
          name: duckdb-parquet-files
          path: data/db

  build:
    needs: update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          cd packages/site && \
          pnpm install

      - name: Download parquet files
        uses: actions/download-artifact@v3
        with:
          name: duckdb-parquet-files
          path: data/db

      - name: Build
        shell: bash
        run: |
          cd packages/site && \
          pnpm run build

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "packages/site/dist/"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v1

